{
	"id": "bad731439cde62142884a101d580b43a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"practice/HotelBooking.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract HotelBooking{\r\n    enum Status{vaccant,occupied}\r\n    Status currentStatus;\r\n    address payable public owner;\r\n    constructor() public {\r\n        currentStatus=Status.vaccant;\r\n        owner =payable(msg.sender) ;\r\n    }\r\n    modifier ishotelAvailable(){\r\n        require(currentStatus==Status.vaccant);\r\n        _;\r\n    }\r\n    modifier cost(uint256 _amout){\r\n        require(msg.value>=_amout);\r\n        _;\r\n    }\r\n\r\n    receive() external payable ishotelAvailable cost(2 ether){\r\n        currentStatus=Status.occupied;\r\n        owner.transfer(msg.value);\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"practice/HotelBooking.sol": {
				"HotelBooking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"practice/HotelBooking.sol\":27:608  contract HotelBooking{\r... */\n  mstore(0x40, 0x80)\n    /* \"practice/HotelBooking.sol\":152:258  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"practice/HotelBooking.sol\":198:212  Status.vaccant */\n  0x00\n    /* \"practice/HotelBooking.sol\":184:197  currentStatus */\n  dup1\n  0x00\n    /* \"practice/HotelBooking.sol\":184:212  currentStatus=Status.vaccant */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x21)\n  revert(0x00, 0x24)\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"practice/HotelBooking.sol\":238:248  msg.sender */\n  caller\n    /* \"practice/HotelBooking.sol\":223:228  owner */\n  0x00\n  0x01\n    /* \"practice/HotelBooking.sol\":223:249  owner =payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"practice/HotelBooking.sol\":27:608  contract HotelBooking{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"practice/HotelBooking.sol\":27:608  contract HotelBooking{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"practice/HotelBooking.sol\":325:339  Status.vaccant */\n      0x00\n        /* \"practice/HotelBooking.sol\":310:339  currentStatus==Status.vaccant */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_6\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_6:\n        /* \"practice/HotelBooking.sol\":310:323  currentStatus */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"practice/HotelBooking.sol\":310:339  currentStatus==Status.vaccant */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_7\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_7:\n      eq\n        /* \"practice/HotelBooking.sol\":302:340  require(currentStatus==Status.vaccant) */\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n        /* \"practice/HotelBooking.sol\":509:516  2 ether */\n      0x1bc16d674ec80000\n        /* \"practice/HotelBooking.sol\":425:431  _amout */\n      dup1\n        /* \"practice/HotelBooking.sol\":414:423  msg.value */\n      callvalue\n        /* \"practice/HotelBooking.sol\":414:431  msg.value>=_amout */\n      lt\n      iszero\n        /* \"practice/HotelBooking.sol\":406:432  require(msg.value>=_amout) */\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n        /* \"practice/HotelBooking.sol\":542:557  Status.occupied */\n      0x01\n        /* \"practice/HotelBooking.sol\":528:541  currentStatus */\n      0x00\n      dup1\n        /* \"practice/HotelBooking.sol\":528:557  currentStatus=Status.occupied */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_12\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_12:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"practice/HotelBooking.sol\":568:573  owner */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"practice/HotelBooking.sol\":568:582  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"practice/HotelBooking.sol\":568:593  owner.transfer(msg.value) */\n      0x08fc\n        /* \"practice/HotelBooking.sol\":583:592  msg.value */\n      callvalue\n        /* \"practice/HotelBooking.sol\":568:593  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n        /* \"practice/HotelBooking.sol\":351:352  _ */\n      pop\n        /* \"practice/HotelBooking.sol\":27:608  contract HotelBooking{\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"practice/HotelBooking.sol\":117:145  address payable public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_17:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:149   */\n    tag_21:\n        /* \"#utility.yul\":110:142   */\n      tag_23\n        /* \"#utility.yul\":136:141   */\n      dup2\n        /* \"#utility.yul\":110:142   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":105:108   */\n      dup3\n        /* \"#utility.yul\":98:143   */\n      mstore\n        /* \"#utility.yul\":88:149   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":155:409   */\n    tag_19:\n        /* \"#utility.yul\":264:268   */\n      0x00\n        /* \"#utility.yul\":302:304   */\n      0x20\n        /* \"#utility.yul\":291:300   */\n      dup3\n        /* \"#utility.yul\":287:305   */\n      add\n        /* \"#utility.yul\":279:305   */\n      swap1\n      pop\n        /* \"#utility.yul\":315:402   */\n      tag_26\n        /* \"#utility.yul\":399:400   */\n      0x00\n        /* \"#utility.yul\":388:397   */\n      dup4\n        /* \"#utility.yul\":384:401   */\n      add\n        /* \"#utility.yul\":375:381   */\n      dup5\n        /* \"#utility.yul\":315:402   */\n      tag_21\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":269:409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":415:519   */\n    tag_24:\n        /* \"#utility.yul\":460:467   */\n      0x00\n        /* \"#utility.yul\":489:513   */\n      tag_28\n        /* \"#utility.yul\":507:512   */\n      dup3\n        /* \"#utility.yul\":489:513   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":478:513   */\n      swap1\n      pop\n        /* \"#utility.yul\":468:519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":525:651   */\n    tag_29:\n        /* \"#utility.yul\":562:569   */\n      0x00\n        /* \"#utility.yul\":602:644   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":595:600   */\n      dup3\n        /* \"#utility.yul\":591:645   */\n      and\n        /* \"#utility.yul\":580:645   */\n      swap1\n      pop\n        /* \"#utility.yul\":570:651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fe1d34f82f99633328419f79102cc18368d6c79b64737e3065404b41292dbf3264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060008060006101000a81548160ff0219169083600181111561005c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061026b806100b16000396000f3fe6080604052600436106100225760003560e01c80638da5cb5b1461018857610183565b366101835760006001811115610061577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008054906101000a900460ff1660018111156100a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146100b157600080fd5b671bc16d674ec80000803410156100c757600080fd5b60016000806101000a81548160ff02191690836001811115610112577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561017f573d6000803e3d6000fd5b5050005b600080fd5b34801561019457600080fd5b5061019d6101b3565b6040516101aa91906101e8565b60405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101e281610203565b82525050565b60006020820190506101fd60008301846101d9565b92915050565b600061020e82610215565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220fe1d34f82f99633328419f79102cc18368d6c79b64737e3065404b41292dbf3264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x26B DUP1 PUSH2 0xB1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x188 JUMPI PUSH2 0x183 JUMP JUMPDEST CALLDATASIZE PUSH2 0x183 JUMPI PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x61 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x1BC16D674EC80000 DUP1 CALLVALUE LT ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E2 DUP2 PUSH2 0x203 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP3 PUSH2 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SAR CALLVALUE 0xF8 0x2F SWAP10 PUSH4 0x3328419F PUSH26 0x102CC18368D6C79B64737E3065404B41292DBF3264736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "27:581:0:-:0;;;152:106;;;;;;;;;;198:14;184:13;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:10;223:5;;:26;;;;;;;;;;;;;;;;;;27:581;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:654:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "105:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "136:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "110:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "110:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "98:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "98:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "98:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "76:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "83:3:1",
														"type": ""
													}
												],
												"src": "7:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "269:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "279:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "291:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "302:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "287:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "279:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "375:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "388:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "399:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "315:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "315:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "241:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "264:4:1",
														"type": ""
													}
												],
												"src": "155:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "468:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "478:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "507:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "489:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "478:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "450:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "460:7:1",
														"type": ""
													}
												],
												"src": "415:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "570:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "580:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "595:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "580:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "552:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "562:7:1",
														"type": ""
													}
												],
												"src": "525:126:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c80638da5cb5b1461018857610183565b366101835760006001811115610061577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008054906101000a900460ff1660018111156100a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146100b157600080fd5b671bc16d674ec80000803410156100c757600080fd5b60016000806101000a81548160ff02191690836001811115610112577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561017f573d6000803e3d6000fd5b5050005b600080fd5b34801561019457600080fd5b5061019d6101b3565b6040516101aa91906101e8565b60405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101e281610203565b82525050565b60006020820190506101fd60008301846101d9565b92915050565b600061020e82610215565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220fe1d34f82f99633328419f79102cc18368d6c79b64737e3065404b41292dbf3264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x188 JUMPI PUSH2 0x183 JUMP JUMPDEST CALLDATASIZE PUSH2 0x183 JUMPI PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x61 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x1BC16D674EC80000 DUP1 CALLVALUE LT ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E2 DUP2 PUSH2 0x203 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP3 PUSH2 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SAR CALLVALUE 0xF8 0x2F SWAP10 PUSH4 0x3328419F PUSH26 0x102CC18368D6C79B64737E3065404B41292DBF3264736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "27:581:0:-:0;;;;;;;;;;;;;;;;;;;;;;;325:14;310:29;;;;;;;;;;;;;;;;:13;;;;;;;;;;:29;;;;;;;;;;;;;;;;;302:38;;;;;;509:7:::1;425:6;414:9;:17;;406:26;;;::::0;::::1;;542:15:::2;528:13;::::0;:29:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:5;;;;;;;;;;;:14;;:25;583:9;568:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;351:1:::1;27:581:::0;;;;;117:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:142:1:-;110:32;136:5;110:32;:::i;:::-;105:3;98:45;88:61;;:::o;155:254::-;264:4;302:2;291:9;287:18;279:26;;315:87;399:1;388:9;384:17;375:6;315:87;:::i;:::-;269:140;;;;:::o;415:104::-;460:7;489:24;507:5;489:24;:::i;:::-;478:35;;468:51;;;:::o;525:126::-;562:7;602:42;595:5;591:54;580:65;;570:81;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "123800",
								"executionCost": "41974",
								"totalCost": "165774"
							},
							"external": {
								"owner()": "1242"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 608,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 152,
									"end": 258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 152,
									"end": 258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 152,
									"end": 258,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 198,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 184,
									"end": 212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 238,
									"end": 248,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 223,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 223,
									"end": 249,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 223,
									"end": 249,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 223,
									"end": 249,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 223,
									"end": 249,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 608,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 608,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 608,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 608,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 608,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe1d34f82f99633328419f79102cc18368d6c79b64737e3065404b41292dbf3264736f6c63430008040033",
									".code": [
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 310,
											"end": 323,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 310,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 310,
											"end": 323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 302,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 302,
											"end": 340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 302,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 302,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 302,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 425,
											"end": 431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 431,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 414,
											"end": 431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 406,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 406,
											"end": 432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 406,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 406,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 406,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 528,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 573,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 568,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 568,
											"end": 582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 583,
											"end": 592,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 117,
											"end": 145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 145,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 149,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 136,
											"end": 141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 105,
											"end": 108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 98,
											"end": 143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 155,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 315,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 397,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 384,
											"end": 401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 375,
											"end": 381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 315,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 315,
											"end": 402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 315,
											"end": 402,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 315,
											"end": 402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 269,
											"end": 409,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 269,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 269,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 269,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 269,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 415,
											"end": 519,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 415,
											"end": 519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 460,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 489,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 489,
											"end": 513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 489,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 478,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 478,
											"end": 513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 519,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 525,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 525,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 562,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 580,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 580,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"practice/HotelBooking.sol\":\"HotelBooking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"practice/HotelBooking.sol\":{\"keccak256\":\"0x132bcd540f6f2c0e0d2132f06782bf8f9f199f6094e2aba9f5386b0690b64af4\",\"urls\":[\"bzz-raw://1ac7b7c3d38e276578aaa7c76b48e34cc3b6c1bb53223a38c26ce5845f602448\",\"dweb:/ipfs/Qmet8ZgorWRd4DcZWp6wqQn3U6c927VM7hQSUuQxeMvjqS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "practice/HotelBooking.sol:HotelBooking",
								"label": "currentStatus",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Status)4"
							},
							{
								"astId": 9,
								"contract": "practice/HotelBooking.sol:HotelBooking",
								"label": "owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_enum(Status)4": {
								"encoding": "inplace",
								"label": "enum HotelBooking.Status",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> practice/HotelBooking.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "practice/HotelBooking.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> practice/HotelBooking.sol:7:5:\n  |\n7 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 258,
					"file": "practice/HotelBooking.sol",
					"start": 152
				},
				"type": "Warning"
			}
		],
		"sources": {
			"practice/HotelBooking.sol": {
				"ast": {
					"absolutePath": "practice/HotelBooking.sol",
					"exportedSymbols": {
						"HotelBooking": [
							72
						]
					},
					"id": 73,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 72,
							"linearizedBaseContracts": [
								72
							],
							"name": "HotelBooking",
							"nameLocation": "36:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HotelBooking.Status",
									"id": 4,
									"members": [
										{
											"id": 2,
											"name": "vaccant",
											"nameLocation": "67:7:0",
											"nodeType": "EnumValue",
											"src": "67:7:0"
										},
										{
											"id": 3,
											"name": "occupied",
											"nameLocation": "75:8:0",
											"nodeType": "EnumValue",
											"src": "75:8:0"
										}
									],
									"name": "Status",
									"nameLocation": "60:6:0",
									"nodeType": "EnumDefinition",
									"src": "55:29:0"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "currentStatus",
									"nameLocation": "97:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 72,
									"src": "90:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$4",
										"typeString": "enum HotelBooking.Status"
									},
									"typeName": {
										"id": 6,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5,
											"name": "Status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4,
											"src": "90:6:0"
										},
										"referencedDeclaration": 4,
										"src": "90:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$4",
											"typeString": "enum HotelBooking.Status"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 9,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "140:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 72,
									"src": "117:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "117:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "173:85:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "currentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "184:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$4",
															"typeString": "enum HotelBooking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 13,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$4_$",
																"typeString": "type(enum HotelBooking.Status)"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "vaccant",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "198:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$4",
															"typeString": "enum HotelBooking.Status"
														}
													},
													"src": "184:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$4",
														"typeString": "enum HotelBooking.Status"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "184:28:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "223:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "238:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "238:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "230:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 18,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "230:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "230:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "223:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "223:26:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:0:0"
									},
									"scope": 72,
									"src": "152:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "291:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$4",
																"typeString": "enum HotelBooking.Status"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 29,
																"name": "currentStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "310:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$4",
																	"typeString": "enum HotelBooking.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 30,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "325:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$4_$",
																		"typeString": "type(enum HotelBooking.Status)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "vaccant",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2,
																"src": "325:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$4",
																	"typeString": "enum HotelBooking.Status"
																}
															},
															"src": "310:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "302:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "302:38:0"
											},
											{
												"id": 35,
												"nodeType": "PlaceholderStatement",
												"src": "351:1:0"
											}
										]
									},
									"id": 37,
									"name": "ishotelAvailable",
									"nameLocation": "273:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:0"
									},
									"src": "264:96:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "395:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 42,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "414:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "414:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 44,
																"name": "_amout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "425:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "414:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "406:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "406:26:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "443:1:0"
											}
										]
									},
									"id": 50,
									"name": "cost",
									"nameLocation": "375:4:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "_amout",
												"nameLocation": "388:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:16:0"
									},
									"src": "366:86:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "517:84:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 58,
														"name": "currentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "528:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$4",
															"typeString": "enum HotelBooking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 59,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$4_$",
																"typeString": "type(enum HotelBooking.Status)"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "occupied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "542:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$4",
															"typeString": "enum HotelBooking.Status"
														}
													},
													"src": "528:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$4",
														"typeString": "enum HotelBooking.Status"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "528:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 66,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "583:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "583:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 63,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "568:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "568:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "568:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "568:25:0"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "receive",
									"modifiers": [
										{
											"id": 53,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 52,
												"name": "ishotelAvailable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 37,
												"src": "487:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "487:16:0"
										},
										{
											"arguments": [
												{
													"hexValue": "32",
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "509:7:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2000000000000000000_by_1",
														"typeString": "int_const 2000000000000000000"
													},
													"value": "2"
												}
											],
											"id": 56,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 54,
												"name": "cost",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "504:4:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "504:13:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:0"
									},
									"scope": 72,
									"src": "460:141:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 73,
							"src": "27:581:0",
							"usedErrors": []
						}
					],
					"src": "0:608:0"
				},
				"id": 0
			}
		}
	}
}